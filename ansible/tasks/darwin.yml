---
- name: Check if Homebrew is installed
  stat:
    path: /usr/local/bin/brew
  register: homebrew_check

- name: Install Homebrew
  shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  when: not homebrew_check.stat.exists

- name: Install Homebrew packages
  community.general.homebrew:
    path: "{{ ansible_env.HOME }}/.dotfiles/darwin/Brewfile"
    state: present

- name: Set screenshot destination folder to Downloads
  community.general.osx_defaults:
    domain: com.apple.screencapture
    key: location
    type: string
    value: "{{ ansible_env.HOME }}/Downloads"
  when: ansible_os_family == "Darwin"

# Necessary for the above to work right after the playbook has run
- name: Restart SystemUIServer (macOS only)
  ansible.builtin.command: killall SystemUIServer
  ignore_errors: yes

# This link doesn't work before Dropbox has actually been installed manually
- name: Create jrnl symlink
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/Library/CloudStorage/Dropbox/jrnl"
    dest: "{{ ansible_env.HOME }}/.jrnl"
    state: link
    force: yes

- name: Create symlinks for shared configs
  file:
    src: "{{ dotfiles_dir }}/darwin/.config/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.config/{{ item }}"
    state: link
    force: yes
  loop:
    - beets

- name: Create symlinks for beets data
  file:
    src: "~/Library/CloudStorage/Dropbox/beets/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.config/beets/{{ item }}"
    state: link
    force: yes
  loop:
    - library.db
    - state.pickle

# asdf

- name: Install asdf with Homebrew
  homebrew:
    name: asdf

- name: Install asdf plugins
  ansible.builtin.shell: |
    source {{ ansible_env.HOME }}/.asdf/asdf.sh
    asdf plugin add {{ item }}
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.HOME }}/.asdf/plugins/{{ item }}"
  loop:
    - nodejs
    - golang
    - rust
    - lua

- name: Create asdf completions directory and generate zsh completion
  ansible.builtin.shell: |
    mkdir -p "${ASDF_DATA_DIR:-$HOME/.asdf}/completions"
    asdf completion zsh > "${ASDF_DATA_DIR:-$HOME/.asdf}/completions/_asdf"
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.ASDF_DATA_DIR | default(ansible_env.HOME + '/.asdf') }}/completions/_asdf"

# TODO: These .zshrc paths are wrong, that file is in ~/.dotfiles

- name: Add asdf shims directory to path (required) 
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.darwin.zshrc"
    line: "export PATH=\"${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH\""
    state: present

- name: Add asdf completions to ~/.darwin.zshrc if not present
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.darwin.zshrc"
    marker: "# {mark} asdf COMPLETIONS"
    block: |
      # append completions to fpath
      fpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)
      # initialise completions with ZSH's compinit
      autoload -Uz compinit && compinit
    state: present

- name: Install latest versions of languages
  ansible.builtin.shell: |
    asdf install {{ item }} latest
    asdf set -u {{ item }} latest
  args:
    executable: /bin/bash
  loop:
    - nodejs
    - golang
    - rust
    - lua

- name: Set GOROOT for asdf managed golang
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/darwin.zshrc"
    line: ". ~/.asdf/plugins/golang/set-env.zsh"
    state: present
